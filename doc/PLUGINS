===========================
Description of the plug-ins
===========================

SubscriptionFeed
----------------
[Path]
 /plugins/subscription/feed.rb

[Input]
 None

[Output]
 Feed

[Abstract]
 Subscribe to feed.

[Syntax]
  - module: SubscriptionFeed
    config:
      feeds:
        - FEED
        - FEED ...


FilterReverse
-------------
[Path]
 /plugins/filter/reverse.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 Sort feed by date asc.

[Syntax]
  - module: FilterReverse


FilterIgnore
------------
[Path]
 /plugins/filter/ignore.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 To exclude the NG word.

[Syntax]
  - module: FilterIgnore
    config:
      exclude:
        - KEYWORD
        - KEYWORD ...


FilterImage
------------
[Path]
 /plugins/filter/image.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 Rewrite the permalink to link of the image in the contents.
 If there is no link of image, the permalink will be nil.

[Syntax]
  - module: FilterImage


FilterTumblrResize
--------------------
[Path]
 /plugins/filter/tumblr_resize.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 To rewrite the permalink to the maximum size of
 the Tumblr (High Res).

[Assumption]
 It has already been rewritten to perm link image link

[Syntax]
  - module: FilterTumblrResize


StorePermalink
--------------
[Path]
 /plugins/store/permalink.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 Save a permanent link.
 The duplicate permalink will be discarded.

[Syntax]
  - module: StorePermalink
    config:
      db: DB_NAME


StoreFullText
-------------
[Path]
 /plugins/store/full_text.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 Save a full text of contents.

 Saved text can be viewed in the viewer below
 https://github.com/id774/blog_viewer

[Syntax]
  - Module: StoreFullText
    config:
      db: DB_NAME


StoreTargetLink
---------------
[Path]
 /plugins/store/target_link.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 Store target locally.
 This emulate "Right click to save".

[Syntax]
  - Module: StoreTargetLink
    config:
      path: SAVE_TO_PATH
      interval: INTERVAL_FOR_DOWNLOAD (in seconds.)


PublishConsole
--------------
[Path]
 /plugins/publish/console.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 Output pipeline to the console.

[Syntax]
  - module: PublishConsole


PublishHatenaBookmark
---------------------
[Path]
 /plugins/publish/hatenabookmark.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 To Hatena Bookmark (Social Bookmark).

[Description]
 To generate the XML for submission to
 Hatena Bookmark API.

[Syntax]
  - Modu  - module: PublishHatenaBookmark
    config:
      username: HATENA_ID
      passowrd: PASSWORD
      interval: INTERVAL_FOR_BOOKMARK (in seconds.)


PublishGoogleCalendar
---------------------
[Path]
 /plugins/publish/google_calendar.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 To register an appointment to Google Calendar.

[Description]
 Register item.title to Google Calendar.

[Syntax]
  - module: PublishGoogleCalendar
    config:
      username: GOOGLE_ACCOUNT
      password: PASSWORD
      interval: INTERVAL


NotifyIkachan
-------------
[Path]
 /plugins/notify/ikachan.rb

[Input]
 Feed

[Output]
 Feed

[Abstract]
 To send a message to ikachan.

[Description]
 POST to ikachan via HTTP.
 ikachan is: http://blog.yappo.jp/yappo/archives/000760.html

[Syntax]
  - module: NotifyIkachan
    config:
      url: http://sample.com
      port: 4979             # port number, the default is 4979.
      channels: foo,bar,#baz # '#' is priced automatically, multiple by ','
      command: notice        # privmsg,notice etc..
      interval: 5            # post interval. (s)


CustomFeedSVNLog
----------------
[Path]
 /plugins/custom_feed/svn_log.rb

[Input]
 None

[Output]
 Feed

[Abstract]
 Get new revision info from SVN.

[Description]
 To get the number that is specified by fetch_items.

[Syntax]
  - module: CustomFeedSVNLog
    config:
      target: http://redmine.rubyforge.org/svn
      fetch_items: 2 # If not specified, 30


CustomFeedURI
-------------
[Path]
 /plugins/custom_feed/uri.rb

[Input]
 None

[Output]
 File Object

[Description]
 Open http or ftp URL to file object.

[Syntax]
  - module: CustomFeedURI
    config:
      url:
        - URL
        - URL ...


FilterLink
----------
[Path]
 /plugins/filter/link.rb

[Input]
 File Object

[Output]
 HTML

[Description]
 Extract a link in HTML.

[Syntax]
  - module: FilterLink


FilterJpeg
----------
[Path]
 /plugins/filter/jpeg.rb

[Input]
 HTML

[Output]
 HTML

[Description]
 Extract jpg link from HTML.

[Syntax]
  - module: FilterJpeg


StoreLink
---------
[Path]
 /plugins/store/link.rb

[Input]
 HTML

[Output]
 HTML

[Abstract]
 Save a permanent link.
 The duplicate permalink will be discarded.
 This is a HTML version for StorePermalink.

[Syntax]
  - module: StoreLink
    config:
      db: DB_NAME


StoreTarget
-----------
[Path]
 /plugins/store/target.rb

[Input]
 HTML

[Output]
 HTML

[Description]
 Store target locally by a link in HTML.
 This emulate "Right click to save".

[Syntax]
  - module: StoreTarget
    config:
      path: SAVE_TO_PATH
      interval: INTERVAL_FOR_DOWNLOAD (in seconds.)
